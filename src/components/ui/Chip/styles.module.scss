/*
	Local Definitions
*/
@mixin shadow($colorMap) {
	box-shadow: 0 4px 6px 2px rgba(map.get($colorMap, 800), 0.2);
	&:hover {
		box-shadow: 0 4px 8px 2px rgba(map.get($colorMap, 800), 0.4);
	}
	&:active {
		box-shadow: 0 2px 2px rgba(map.get($colorMap, 800), 0.2);
	}
}

@mixin shadow-light($colorMap) {
	box-shadow: 0 4px 6px 2px rgba(map.get($colorMap, 500), 0.4);
	&:hover {
		box-shadow: 0 4px 8px 3px rgba(map.get($colorMap, 500), 0.6);
	}
	&:active {
		box-shadow: 0 2px 4px rgba(map.get($colorMap, 500), 0.4);
	}
}

.Chip {
	height: 2rem;
	white-space: nowrap;
	border-radius: 1rem;
	overflow: hidden;
	background-color: #FFF;
	// background-color: map.get(colors.$orange, 300);
	// color: map.get(colors.$orange, 900);
	display: inline-flex;
	align-items: center;
	line-height: 1;
	font-weight: 600;
	transition: box-shadow ease 0.2s, color ease 0.2s;
	@include shadow(colors.$neutral);
	&.warm {
		@include shadow(colors.$orange);
	}
	&.hot {
		@include shadow(colors.$pink);
	}
	&.cool {
		@include shadow(colors.$blue);
	}
	&.fresh {
		@include shadow(colors.$mint);
	}
	&.neutralLight {
		@include shadow-light(colors.$neutral);
	}
	&.warmLight {
		@include shadow-light(colors.$orange);
	}
	&.hotLight {
		@include shadow-light(colors.$pink);
	}
	&.coolLight {
		@include shadow-light(colors.$blue);
	}
	&.freshLight {
		@include shadow-light(colors.$mint);
	}
	&:active {
		background-color: #EEE;
		// background-color: map.get(colors.$pink, 200);
	}
}


.thumbnail {
	margin: 0 0.5rem;
	// TODO: below is for colored circle placeholder (e.g. for color coded tags)
	// height: 1.5rem;
	// width: 1.5rem;
	// border-radius: 50%;
	// background-color: #eee;
}

.text {
	margin-right: 0.75rem;
}
